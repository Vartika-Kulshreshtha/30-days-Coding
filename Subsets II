class Solution {
public:
    void helper(vector<int>& nums, int i, vector<int>& subset, vector<vector<int>>& ans)
    {
        if(i==nums.size())
        {
            ans.push_back(subset);
            return;
        }
        subset.push_back(nums[i]);
        helper(nums, i+1, subset, ans);

        while(i+1<nums.size() && nums[i]==nums[i+1]) i++;

        subset.pop_back();
        helper(nums, i+1, subset, ans);
    }
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        sort(nums.begin(),nums.end());
        vector<int>subset;
        vector<vector<int>>ans;
        int i=0;
        helper(nums,i,subset,ans);
        return ans;
    }
};
