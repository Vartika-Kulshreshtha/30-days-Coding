class Solution {
public:
    void helper(vector<int>& candidates, int target, vector<int>& temp, vector<vector<int>>& ans, int sumtillnow, int i)
    {
        if(sumtillnow==target)
        {
            ans.push_back(temp);
            return;
        }
        if(sumtillnow>target || i>=candidates.size()) return;
        
        //skip
        helper(candidates, target, temp, ans, sumtillnow, i+1);

        //pick
        sumtillnow+=candidates[i];
        temp.push_back(candidates[i]);
        helper(candidates, target, temp, ans, sumtillnow,i);
        
        sumtillnow-=candidates[i];
        temp.pop_back();
    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        int i=0;
        vector<int>temp;
        vector<vector<int>>ans;
        int sumtillnow=0;
        helper(candidates, target, temp, ans, sumtillnow, i);
        return ans;
    }
};
