class Solution {
  public:
  int countNodes(struct Node* tree)
  {
      if(tree==NULL) return 0;
      
      int ans=1+countNodes(tree->left)+countNodes(tree->right);
      
      return ans;
  }
  bool isCBT(struct Node* tree, int index, int count)
  {
      if(tree==NULL) return 1;
      
      if(index>=count) return 0;
      
      else 
      {
          bool left=isCBT(tree->left, 2*index+1, count);
          bool right=isCBT(tree->right, 2*index+2, count);
          return (left && right);
      }
  }
  bool isMaxOrder(struct Node* tree)
  {
      if(tree->left==NULL && tree->right==NULL) return 1;
      
      if(tree->right==NULL) return (tree->data > tree->left->data);
      
      else
      {
          bool left=isMaxOrder(tree->left);
          bool right=isMaxOrder(tree->right);
          
          return (left && right && (tree->data > tree->left->data && tree->data > tree->right->data));
      }
  }
    bool isHeap(struct Node* tree) {
        // code here
        int index=0;
        int totalcount=countNodes(tree);
        if(isCBT(tree, index, totalcount) && isMaxOrder(tree)) return 1;
        else return 0;
    }
};
