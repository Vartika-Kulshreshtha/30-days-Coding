#include<map>
#include<queue>
class Solution {
public:
    vector<int> topKFrequent(vector<int>& nums, int k) {
        vector<int> ans;
        unordered_map<int, int>mp;

        for(int i=0; i<nums.size(); i++)
        {
            mp[nums[i]]++;
        }
        priority_queue < pair<int,int> , vector<pair<int,int>> , greater<pair<int,int>> > mini;
        for(auto i=mp.begin(); i!=mp.end(); i++)
        {
            mini.push({i->second, i->first});
            if(mini.size()>k)
            {
                mini.pop();
            }
        }
        while(mini.size()>0)
        {
            ans.push_back(mini.top().second);
            mini.pop();
        }
        return ans;
    }
};
